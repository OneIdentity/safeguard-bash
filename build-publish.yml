variables:
  - template: pipeline-templates/global-variables.yml
trigger:
  branches:
    include:
      - master
      - release-*
  paths:
    exclude:
      - README.md
pr: none
jobs:
  - job: Build
    displayName: "Build and publish Linux Docker images, publish GitHub zip"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: pipeline-templates/build-steps.yml
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'PangaeaBuild-GitHub'
          repositoryName: 'OneIdentity/safeguard-bash'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'userSpecifiedTag'
          tag: 'release-$(VersionString)'
          title: '$(VersionString)'
          isPreRelease: $(isPrerelease)
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'commitBased'
          assets: $(Build.ArtifactStagingDirectory)/*.zip
        displayName: 'Creating and publishing a release to Github'
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'SafeguardOpenSource'
          KeyVaultName: 'SafeguardBuildSecrets'
          SecretsFilter: 'DockerHubAccessToken,DockerHubPassword'
        displayName: 'Get Docker Hub Access Token from Sandbox Azure Key Vault'
        condition: and( succeeded(), eq( variables.shouldPublishDocker, true ) )
      - task: Bash@3
        inputs:
          targetType: 'inline'
          failOnStderr: true
          script: |
            docker login -u danpetersonoi --password-stdin <<<$(DockerHubAccessToken) 2>/dev/null
            docker push oneidentity/safeguard-bash:$(VersionString)-alpine
            docker push oneidentity/safeguard-bash:latest
            docker logout
        condition: and( succeeded(), eq(variables.shouldPublishDocker, true) )
        displayName: 'Pushing Linux Docker images to Docker Hub'
